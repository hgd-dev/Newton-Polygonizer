name: Build and Release

on:
  push:
    branches:
      - main  # Trigger on every push to main
    tags:
      - 'v*.*.*'   # Only runs on version tags like v1.0.0
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup CMake
        uses: jwlawson/actions-setup-cmake@v2

      - name: Create build directory
        run: mkdir -p build

      - name: Build executable
        run: |
          cd build
          cmake .. -DCMAKE_BUILD_TYPE=Release
          cmake --build . --config Release

      - name: Package Linux
        if: runner.os == 'Linux'
        run: |
          cd build
          tar -czf Newton-Polygonizer-Linux.tar.gz NewtonPolygonizer
      - name: Package macOS
        if: runner.os == 'macOS'
        run: |
          cd build
          zip -r Newton-Polygonizer-macOS.zip NewtonPolygonizer
          
      - name: Package Windows
        if: runner.os == 'Windows'
        run: |
          cd build
          Compress-Archive -Path Release/NewtonPolygonizer.exe -DestinationPath Newton-Polygonizer-Windows.zip          
      - name: Upload to GitHub Release
        run: |
          cd build
          if [[ "${{ matrix.os }}" == "ubuntu-latest" ]]; then
            gh release upload latest Newton-Polygonizer-Linux.tar.gz --clobber || echo "Release not found"
          elif [[ "${{ matrix.os }}" == "macos-latest" ]]; then
            gh release upload latest Newton-Polygonizer-macOS.zip --clobber || echo "Release not found"
          else
            gh release upload latest Newton-Polygonizer-Windows.zip --clobber || echo "Release not found"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

